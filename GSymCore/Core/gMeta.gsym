($gSymDocument "0.1-alpha"
	($module
		($metaLanguage gMeta
			($where
				(
					($# "STYLE SHEETS")
					($# "Error background")
					(@errorBackgroundStyle
						($style
							(:backgroundColour ($colour #1.0 #0.5 #0.5))
						)
					)
				
					($# "Comment background")
					(@commentBackgroundStyle
						($style
							(:backgroundColour ($colour #0.95 #0.95 #0.95))
							(:borderColour ($colour #0.8 #0.8 #0.8))
						)
					)
				
					($# "Label background")
					(@labelBackgroundStyle
						($style
							(:backgroundColour ($colour #0.9 #1.0 #0.9))
							(:borderColour ($colour #0.0 #0.8 #0.0))
						)
					)
				
					($# "Container background")
					(@containerBackgroundStyle
						($style
							(:backgroundColour ($colour #1.0 #1.0 #0.9))
							(:borderColour ($colour #1.0 #0.75 #0.5))
						)
					)
				
					($# "Style background")
					(@styleBackgroundStyle
						($style
							(:backgroundColour ($colour #1.0 #0.95 #1.0))
							(:borderColour ($colour #1.0 #0.65 #1.0))
						)
					)
				
					($# "View evaluation background")
					(@viewEvalBackgroundStyle
						($style
							(:backgroundColour ($colour #0.95 #0.95 #1.0))
							(:borderColour ($colour #0.7 #0.7 #1.0))
						)
					)
				
					($# "Title vbox")
					(@titleVBoxStyle
						($style
							(:alignment (@DTBox . ALIGN_CENTRE))
						)
					)
					
					($# "Match pattern constant")
					(@matchPatternConstantStyle
						($style
							(:colour ($colour #0.0 #0.5 #0.0))
						)
					)
				
					($# "Keyword")
					(@keywordStyle
						($style
							(:colour ($colour #0.0 #0.0 #0.5))
							(:font "#'Sans 11 bold")
						)
					)
				
					
					
					($# "VIEW FUNCTIONS")							
					($# "View style list; returns a list containing the box, or an empty list")
					(@viewStyleList
						($lambda (@styles)
							($if
								( ((@len <- @styles)  >  #0 )
									($list
										($hbox
											(
												($list
													($label "#'STYLES:")
												)
												+
												($mapViewEval @styles (@viewExpressionFactory <- @viewViewSpecial))
											)
										)
									)
								)
								( $else
									($list)
								)
							)
						)
					)
		
					($# "View special expressions for a view definition")
					(@viewViewSpecial
						($lambda (@node)
							($match @node
								($# "View eval, no factory")
								( ($viewEval (: @x ^))
									($activeBorder
										($ahbox ($list
											($label "#'ViewEval" @keywordStyle)
											($label "#'(")
											($viewEval @x (@viewExpressionFactory <- @viewViewSpecial))
											($label "#')")
										))
										@viewEvalBackgroundStyle
									)
								)
								
								($# "View eval, with factory")
								( ($viewEval (: @x ^) (: @fac ^))
									($activeBorder
										($ahbox ($list
											($label "#'ViewEval" @keywordStyle)
											($label "#'(")
											($viewEval @x (@viewExpressionFactory <- @viewViewSpecial))
											($label "#'WITH")
											($viewEval @fac (@viewExpressionFactory <- @viewViewSpecial))
											($label "#')")
										))
										@viewEvalBackgroundStyle
									)
								)
								
								($# "Map View eval, no factory")
								( ($mapViewEval (: @x ^))
									($activeBorder
										($ahbox ($list
											($label "#'MapViewEval" @keywordStyle)
											($label "#'(")
											($viewEval @x (@viewExpressionFactory <- @viewViewSpecial))
											($label "#')")
										))
										@viewEvalBackgroundStyle
									)
								)
								
								($# "Map View eval, with factory")
								( ($mapViewEval (: @x ^) (: @fac ^))
									($activeBorder
										($ahbox ($list
											($label "#'MapViewEval" @keywordStyle)
											($label "#'(")
											($viewEval @x (@viewExpressionFactory <- @viewViewSpecial))
											($label "#'WITH")
											($viewEval @fac (@viewExpressionFactory <- @viewViewSpecial))
											($label "#')")
										))
										@viewEvalBackgroundStyle
									)
								)
								
								($# "Colour")
								( ($colour (: @red ^) (: @green ^) (: @blue ^))
									($activeBorder
										($vbox ($list
											($label "#'Colour" @keywordStyle)
											($ahbox ($list
												($label "#'Red:")
												($viewEval @red (@viewExpressionFactory <- @viewViewSpecial))
												($label "#'Grn:")
												($viewEval @green (@viewExpressionFactory <- @viewViewSpecial))
												($label "#'Blu:")
												($viewEval @blue (@viewExpressionFactory <- @viewViewSpecial))
											))
										))
									)
								)
								
								($# "Style")
								( ($style (: @pairs *))
									($where
										(
											( @viewStylePair
												($lambda (@node)
													($activeBorder
														($ahbox ($list
															($label ((@node [] #0 ) [:] #1 #None))
															($label "#'=")
															($viewEval (@node [] #1 ) (@viewExpressionFactory <- @viewViewSpecial))
														))
													)
												)
											)
										)
										($activeBorder
											($vbox ($list
												($label "#'Style" @keywordStyle)
												($vbox ($mapViewEval @pairs @viewStylePair))
											) @titleVBoxStyle)
											@styleBackgroundStyle
										)
									)
								)
								
								($# "Apply style")
								( ($applyStyle (: @style ^) (: @x ^))
									($activeBorder
										($vbox ($list
											($ahbox ($list
												($label "#'ApplyStyle" @keywordStyle)
												($viewEval @style (@viewExpressionFactory <- @viewViewSpecial))
											))
											($viewEval @x (@viewExpressionFactory <- @viewViewSpecial))
										))
									)
								)
								
								($# "Active border")
								( ($activeBorder (: @x ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'ActiveBorder" @keywordStyle)
											($vbox
												(
													($list ($viewEval @x (@viewExpressionFactory <- @viewViewSpecial)))
													+
													(@viewStyleList <- @styles)
												)
											)
										) @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "Border")
								( ($border (: @x ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'Border" @keywordStyle)
											($vbox
												(
													($list ($viewEval @x (@viewExpressionFactory <- @viewViewSpecial)))
													+
													(@viewStyleList <- @styles)
												)
											)
										)  @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "Indent")
								( ($indent (: @indentation ^) (: @x ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($hbox ($list
												($vbox ($list
													($label "#'Indent" @keywordStyle)
													($viewEval @indentation (@viewExpressionFactory <- @viewViewSpecial))
												))
												($vbox
													(
														($list ($viewEval @x (@viewExpressionFactory <- @viewViewSpecial)))
														+
														(@viewStyleList <- @styles)
													)
												)
											))
										)  @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "H-Line")
								( ($hline (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'H-Line" @keywordStyle)
											($vbox
												(
													($list ($viewEval @x (@viewExpressionFactory <- @viewViewSpecial)))
													+
													(@viewStyleList <- @styles)
												)
											)
										)  @titleVBoxStyle)
										@labelBackgroundStyle
									)
								)
								
								($# "Label")
								( ($label (: @x ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'Label" @keywordStyle)
											($vbox
												(
													($list ($viewEval @x (@viewExpressionFactory <- @viewViewSpecial)))
													+
													(@viewStyleList <- @styles)
												)
											)
										)  @titleVBoxStyle)
										@labelBackgroundStyle
									)
								)
								
								($# "Entry")
								( ($entry (: @x ^))
									($activeBorder
										($vbox ($list
											($label "#'Entry" @keywordStyle)
											($viewEval @x (@viewExpressionFactory <- @viewViewSpecial))
										)  @titleVBoxStyle)
										@labelBackgroundStyle
									)
								)
								
								($# "HBox")
								( ($hbox (: @x ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'HBox" @keywordStyle)
											($vbox
												(
													($list ($viewEval @x (@viewExpressionFactory <- @viewViewSpecial)))
													+
													(@viewStyleList <- @styles)
												)
											)
										)  @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "AHBox")
								( ($ahbox (: @x ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'AHBox" @keywordStyle)
											($vbox
												(
													($list ($viewEval @x (@viewExpressionFactory <- @viewViewSpecial)))
													+
													(@viewStyleList <- @styles)
												)
											)
										)  @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "VBox")
								( ($vbox (: @x ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'VBox" @keywordStyle)
											($vbox
												(
													($list ($viewEval @x (@viewExpressionFactory <- @viewViewSpecial)))
													+
													(@viewStyleList <- @styles)
												)
											)
										)  @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
		
								($# "Script")
								( ($script (: @main ^) (: @lsuper ^) (: @lsub ^) (: @rsuper ^) (: @rsub ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'Script" @keywordStyle)
											($vbox
												(
													($list
														($script
															($viewEval @main (@viewExpressionFactory <- @viewViewSpecial))
															($viewEval @lsuper (@viewExpressionFactory <- @viewViewSpecial))
															($viewEval @lsub (@viewExpressionFactory <- @viewViewSpecial))
															($viewEval @rsuper (@viewExpressionFactory <- @viewViewSpecial))
															($viewEval @rsub (@viewExpressionFactory <- @viewViewSpecial))
														)
													)
													+
													(@viewStyleList <- @styles)
												)
											)
										) @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "Script left superscript")
								( ($scriptLSuper (: @main ^) (: @scriptChild ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'Script - left super" @keywordStyle)
											($vbox
												(
													($list
														($scriptLSuper
															($viewEval @main (@viewExpressionFactory <- @viewViewSpecial))
															($viewEval @scriptChild (@viewExpressionFactory <- @viewViewSpecial))
														)
													)
													+
													(@viewStyleList <- @styles)
												)
											)
										) @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "Script left subscript")
								( ($scriptLSub (: @main ^) (: @scriptChild ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'Script - left sub" @keywordStyle)
											($vbox
												(
													($list
														($scriptLSub
															($viewEval @main (@viewExpressionFactory <- @viewViewSpecial))
															($viewEval @scriptChild (@viewExpressionFactory <- @viewViewSpecial))
														)
													)
													+
													(@viewStyleList <- @styles)
												)
											)
										) @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "Script right superscript")
								( ($scriptRSuper (: @main ^) (: @scriptChild ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'Script - right super" @keywordStyle)
											($vbox
												(
													($list
														($scriptRSuper
															($viewEval @main (@viewExpressionFactory <- @viewViewSpecial))
															($viewEval @scriptChild (@viewExpressionFactory <- @viewViewSpecial))
														)
													)
													+
													(@viewStyleList <- @styles)
												)
											)
										) @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "Script right subscript")
								( ($scriptRSub (: @main ^) (: @scriptChild ^) (: @styles *))
									($activeBorder
										($vbox ($list
											($label "#'Script - right sub" @keywordStyle)
											($vbox
												(
													($list
														($scriptRSub
															($viewEval @main (@viewExpressionFactory <- @viewViewSpecial))
															($viewEval @scriptChild (@viewExpressionFactory <- @viewViewSpecial))
														)
													)
													+
													(@viewStyleList <- @styles)
												)
											)
										) @titleVBoxStyle)
										@containerBackgroundStyle
									)
								)
								
								($# "Unknown")
								( (: @x ^)  (@log <- (@gLispAsString <- @x)) ($activeBorder ($label u"#'\u2620 SPECIAL-ERROR \u2620")) )
							)
						)
					)
					
					($# "View a comment")
					(@viewComment
						($lambda (@comment)
							($activeBorder ($label ("#'#" + @comment)) @commentBackgroundStyle)
						)
					)
					
					($# "View a lambda parameter")
					(@viewLambdaParam
						($lambda (@node)
							($activeBorder ($label (@node [:] #1 #None)))
						)
					)
					
					($# "View a lambda parameter list")
					(@viewLambdaParamList
						($lambda (@node)
							($activeBorder
								($ahbox
									((($list ($label "#'("))  +  ($mapViewEval @node @viewLambdaParam))  +  ($list ($label "#')")))
								)
							)
						)
					)
					
					($# "View an if pair; factory dependent on special function and bIf")
					(@viewIfPairFactory
						($lambda (@viewSpecial @bIf)
							($lambda (@node)
								($match @node
									( ($# (: @comment !))
										(@viewComment <- @comment)
									)
									
									( ($else (: @expressions *))
										($activeBorder
											($vbox ($list
												($label "#'ELSE:" @keywordStyle)
												($indent #40.0
													($vbox
														($mapViewEval @expressions (@viewExpressionFactory <- @viewSpecial))
													)
												)
											))
										)
									)
		
									( ((: @condition ^) (: @expressions *))
										($activeBorder
											($vbox ($list
												($ahbox ($list
													($if
														( @bIf
															($label "#'IF:" @keywordStyle)
														)
														( $else
															($label "#'ELIF:" @keywordStyle)
														)
													)
													($viewEval @condition (@viewExpressionFactory <- @viewSpecial))
												))
												($indent #40.0
													($vbox
														($mapViewEval @expressions (@viewExpressionFactory <- @viewSpecial))
													)
												)
											))
										)
									)
		
									($# "Unknown")
									( (: @x ^)  (@log <- (@gLispAsString <- @x)) ($activeBorder ($label u"#'\u2620 IF-ERROR \u2620")) )
								)
							)
						)
					)
		
					($# "View a where binding; factory dependent on special function")
					(@viewWhereBindingFactory
						($lambda (@viewSpecial)
							($lambda (@node)
								($match @node
									( ($# (: @comment !))
										(@viewComment <- @comment)
									)
								
									( ((: @varName !) (: @expression ^))
										($activeBorder
											($hbox ($list
												($label (@varName [:] #1 #None))
												($label "#'=")
												($viewEval @expression (@viewExpressionFactory <- @viewSpecial))
											))
										)
									)
								)
							)
						)
					)
		
					($# "View a match pattern")
					(@viewMatchPatternFactory
						($lambda (@viewSpecial)
							($lambda (@node)
								($match @node
									($# "Any non-list")
									( !!
										($activeBorder ($label "#'!"))
									)
									
									($# "Any list")
									( //
										($activeBorder ($label "#'(..)"))
									)
									
									($# "Anything")
									( ^^
										($activeBorder ($label u"#'\u22c0"))
									)
									
									($# "List internal 0+")
									( **
										($activeBorder ($scriptRSuper ($label u"#'\u2025") ($label "#'*")))
									)
		
									($# "List internal 1+")
									( ++
										($activeBorder ($scriptRSuper ($label u"#'\u2025") ($label "#'+")))
									)
									
									($# "Constant")
									( (: @constantValue !)
										($activeBorder ($label @constantValue @matchPatternConstantStyle))
									)
									
									($# "List internal min to max")
									( (-- (: @min !) (: @max !))
										($activeBorder ($scriptRSuper ($label u"#'\u2025") ($label ((@min + "#'-") + @max))))
									)
									
									($# "Bind")
									( (:: (: @varName !) (: @subPattern ^))
										($activeBorder ($scriptLSub ($viewEval @subPattern (@viewMatchPatternFactory <- @viewSpecial)) ($label (@varName [:] #1 #None))))
									)
									
									($# "Condition")
									( (?? (: @varName !) (: @conditionExpr ^) (: @subPattern ^))
										($activeBorder
											($scriptRSub
												($viewEval @subPattern (@viewMatchPatternFactory <- @viewSpecial))
												($hbox ($list
													($label "#'?(") ($label (@varName [:] #1 #None)) ($label "#') =")
													($viewEval @conditionExpr (@viewExpressionFactory <- @viewSpecial))
												))
											)
										)
									)
									
									($# "List pattern")
									( (: @listPattern /)
										($activeBorder
											($ahbox
												((($list ($label "#'[")) + ($mapViewEval @listPattern (@viewMatchPatternFactory <- @viewSpecial))) + ($list ($label "#']")))
											)
										)
									)
								)
							)
						)
					)
		
					($# "View a match pair; factory dependent on special function")
					(@viewMatchPairFactory
						($lambda (@viewSpecial)
							($lambda (@node)
								($match @node
									( ($# (: @comment !))
										(@viewComment <- @comment)
									)
								
									(  ((: @pattern ^) (: @expressions *))
										($activeBorder
											($hbox ($list
												($viewEval @pattern (@viewMatchPatternFactory <- @viewSpecial))
												($label u"#'\u21d2")
												($vbox
													($mapViewEval @expressions (@viewExpressionFactory <- @viewSpecial))
												)
											))
										)
									)
								)
							)
						)
					)
		
					($# "View an expression; factory dependent on special function")
					(@viewExpressionFactory
						($lambda (@viewSpecial)
							($lambda (@node)
								($match @node
									($# "Variable access")
									( (? @x (@x startswith "#'@") (: @varName !))
										($activeBorder ($label (@varName [:] #1 #None)))
									)
									
									($# "String literal")
									( (? @x (@x startswith "#'#'") (: @stringValue !))
										($activeBorder ($label (("#'\"" + (@stringValue [:] #2 #None)) + "#'\"")))
									)
									
									($# "Literal")
									( (: @literalValue !)
										($activeBorder ($label (@literalValue [:] #1 #None)))
									)
									
									($# "Empty list")
									( ()
										($activeBorder ($label "#'None"))
									)
		
									($# "Comment")
									( ($# @comment)
										(@viewComment <- @comment)
									)
									
									($# "List literal")
									( ($list (: @elements *))
										($activeBorder
											($ahbox
												((($list ($label "#'["))  +  ($mapViewEval @elements (@viewExpressionFactory <- @viewSpecial)))  +  ($list ($label "#']")))
											)
										)
									)
		
									($# "Set literal")
									( ($set (: @elements *))
										($activeBorder
											($ahbox
												((($list ($label "#'SET" @keywordStyle) ($label "#'("))  +  ($mapViewEval @elements (@viewExpressionFactory <- @viewSpecial)))  +  ($list ($label "#')")))
											)
										)
									)
		
									($# "Lambda expression 2 or more expressions")
									( ($lambda (: @params /) (: @expressions (- #2 #None)))
										($activeBorder
											($vbox
												(
													($list
														($ahbox ($list
															($label u"#'\u03bb" @keywordStyle)
															($viewEval @params @viewLambdaParamList)
															($label "#'=")
														))
													)
													+
													($mapViewEval @expressions (@viewExpressionFactory <- @viewSpecial))
												)
											)
										)
									)
		
									($# "Lambda expression, with 0 or 1 expressions")
									( ($lambda (: @params /) (: @expressions *))
										($activeBorder
											($hbox
												(
													($list
														($ahbox ($list
															($label u"#'\u03bb" @keywordStyle)
															($viewEval @params @viewLambdaParamList)
															($label "#'=")
														))
													)
													+
													($mapViewEval @expressions (@viewExpressionFactory <- @viewSpecial))
												)
											)
										)
									)
		
									($# "If expression")
									( ($if (: @ifPair ^) (: @elifElsePairs *))
										($activeBorder
											($vbox
												(
													($list
														($viewEval @ifPair (@viewIfPairFactory <- @viewSpecial #True))
													)
													+
													($mapViewEval @elifElsePairs (@viewIfPairFactory <- @viewSpecial #False))
												)
											)
										)
									)
									
									($# "Where expression")
									( ($where (: @bindings /) (: @expressions *))
										($activeBorder
											($vbox ($list
												($label "#'WHERE" @keywordStyle)
												($indent #50.0 ($vbox ($mapViewEval @bindings (@viewWhereBindingFactory <- @viewSpecial))))
												($indent #20.0
													($hbox ($list
														($label u"#'\u2192")
															($vbox
																($mapViewEval @expressions (@viewExpressionFactory <- @viewSpecial))
															)
													))
												)
											))
										)
									)
									
									($# "Pattern match expression")
									( ($match (: @expression ^) (: @matchPairs *))
										($activeBorder
											($vbox ($list
												($ahbox ($list
													($label "#'MATCH" @keywordStyle)
													($viewEval @expression (@viewExpressionFactory <- @viewSpecial))
													($label "#':")
												))
												
												($indent #30.0
													($vbox ($mapViewEval @matchPairs (@viewMatchPairFactory <- @viewSpecial)))
												)
											))
										)
									)
									
									($# "Single element list")
									( ((: @x ^))   ((@viewExpressionFactory <- @viewSpecial) <- @x) )
									
									($# "Special")
									( (: @s((? @x (@x startswith "#'$") !) *))
										(@viewSpecial <- @s)
									)
									
									($# "Get attribute")
									( ( (: @a ^) . (: @attr !) )
										($activeBorder
											($ahbox ($list
												($viewEval @a (@viewExpressionFactory <- @viewSpecial))
												($label "#'.")
												($label @attr)
											))
										)
									)
		
									($# "Get item")
									( ( (: @a ^) [] (: @key !) )
										($activeBorder
											($ahbox ($list
												($viewEval @a (@viewExpressionFactory <- @viewSpecial))
												($label "#'[")
												($viewEval @key (@viewExpressionFactory <- @viewSpecial))
												($label "#']")
											))
										)
									)
		
									($# "Get slice")
									( ( (: @a ^) [:] (: @start !) (: @stop !))
										($activeBorder
											($ahbox ($list
												($viewEval @a (@viewExpressionFactory <- @viewSpecial))
												($label "#'[")
												($viewEval @start (@viewExpressionFactory <- @viewSpecial))
												($label "#':")
												($viewEval @stop (@viewExpressionFactory <- @viewSpecial))
												($label "#']")
											))
										)
									)
		
									($# "Addition")
									( ( (: @a ^) "++" (: @b ^) )
										($activeBorder
											($ahbox ($list
												($viewEval @a (@viewExpressionFactory <- @viewSpecial))
												($label "#'+")
												($viewEval @b (@viewExpressionFactory <- @viewSpecial))
											))
										)
									)
		
									($# "Call")
									( ( (: @a ^) "<-" (: @params *) )
										($activeBorder
											($ahbox
												(
													(
														($list
															($viewEval @a (@viewExpressionFactory <- @viewSpecial))
															($label "#'(")
														)
														+
														($mapViewEval @params (@viewExpressionFactory <- @viewSpecial))
													)
													+
													($list ($label "#')"))
												)
											)
										)
									)
		
									($# "Method call")
									( ( (: @a ^) (: @methodName !) (: @params *) )
										($activeBorder
											($ahbox
												(
													(
														($list
															($viewEval @a (@viewExpressionFactory <- @viewSpecial))
															($label "#'.")
															($label @methodName)
															($label "#'(")
														)
														+
														($mapViewEval @params (@viewExpressionFactory <- @viewSpecial))
													)
													+
													($list ($label "#')"))
												)
											)
										)
									)
		
									($# "Unknown")
									( (: @x ^)  (@log <- (@gLispAsString <- @x)) ($activeBorder ($label u"#'\u2620 ERROR \u2620")) )
								)
							)
						)
					)
				)
				(@viewExpressionFactory <- @viewViewSpecial)
			)
		)
	)
)
