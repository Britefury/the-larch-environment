($gSymDocument "0.1-alpha"
	($unit
		($gMetaModule
			($module
				(@compilers
					($compilerCollection
						($defineCompiler python2.5 ascii
							($where
								(
									(@compileNode
										($lambda (@node)
											($match @node
												( (add (: @x ^) (: @y ^))   (  (((("#'(" + (@compileNode <- @x)) + "#' + ") + (@compileNode <- @y)) + "#')")  ) )
												( (sub (: @x ^) (: @y ^))   (  (((("#'(" + (@compileNode <- @x)) + "#' - ") + (@compileNode <- @y)) + "#')")  ) )
												( (mul (: @x ^) (: @y ^))   (  (((("#'(" + (@compileNode <- @x)) + "#' * ") + (@compileNode <- @y)) + "#')")  ) )
												( (div (: @x ^) (: @y ^))   (  (((("#'(" + (@compileNode <- @x)) + "#' / ") + (@compileNode <- @y)) + "#')")  ) )
												( (pow (: @x ^) (: @y ^))   (  (((("#'(" + (@compileNode <- @x)) + "#' ** ") + (@compileNode <- @y)) + "#')")  ) )
												( (loadLocal (: @x !))   ((@x)) )
												( (undefinedExpr)   "#'<UNDEFINED>" )
											)
										)
									)
								)
								@compileNode
							)
						)
					)
				)
				
				
				(@nodeViewFunction
					($where
						(
							(@divBoxStyle
								($style
									(:alignment (@DTBox . ALIGN_EXPAND))
								)
							)
							
							(@undefinedStyle
								($style
									(:colour (@ColourRGB <- #0.75 #0.0 #0.0))
									(:font "#'Sans 11 italic")
								)
							)
							
							(@identifierInitChars
								((@string . letters)  +  "#'_")
							)
							
							(@identifierBodyChars
								(@identifierInitChars  +  (@string . digits))
							)
							
							(@tokeniser
								($tokeniser
									(identifier ($tokWord @identifierInitChars @identifierBodyChars))
									(op_pow ($tokLiteral "#'**"))
									(op_add ($tokLiteral "#'+"))
									(op_sub ($tokLiteral "#'-"))
									(op_mul ($tokLiteral "#'*"))
									(op_div ($tokLiteral "#'/"))
									(op_mod ($tokLiteral "#'%"))
								)
							)
							
							(@exprInteractor
								($lambda (@node)
									($interactor
										( ($key "+")
											($replace @node ($! (add ($< @node) (nilExpr))))
										)
										( ($tokens op_add)
											($replace @node ($! (add ($< @node) (nilExpr))))
										)
									)
								)
							)

							(@loadlLocalInteractor
								($lambda (@node)
									($interactor
										( ($tokens (: @name identifier))
											($replace @node ($! (loadLocal ($< @name))))
										)
									)
								)
							)
							
							(@operatorInteractor
								($lambda (@node @x @y)
									($interactor
										( ($tokens op_add)
											($replace (@node [] #0 ) ($! add))
										)

										( ($tokens op_sub)
											($replace (@node [] #0 ) ($! sub))
										)

										( ($tokens op_mul)
											($replace (@node [] #0 ) ($! mul))
										)

										( ($tokens op_div)
											($replace (@node [] #0 ) ($! div))
										)
										
										( ($tokens op_mod)
											($replace (@node [] #0 ) ($! mod))
										)

										( ($tokens op_pow)
											($replace (@node [] #0 ) ($! pow))
										)

									)
								)
							)
							
							(@operatorEditor
								($lambda (@node @x @y @op)
									($interact
										($activeBorder
											($entry @op @op @tokeniser)
										)
										(@operatorInteractor <- @node @x @y)
									)
								)
							)

							(@divideEditor
								($lambda (@node @x @y)
									($interact
										($customEntry ($hline) "#'/" @tokeniser)
										(@operatorInteractor <- @node @x @y)
									)
								)
							)
						)
						($lambda (@node)
							($match @node
								( (add (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) (@operatorEditor <- @node @x @y "#'+") ($viewEval @y))))  ) )
								( (sub (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) (@operatorEditor <- @node @x @y "#'-") ($viewEval @y))))  ) )
								( (mul (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) (@operatorEditor <- @node @x @y "#'*") ($viewEval @y))))  ) )
								( (div (: @x ^) (: @y ^))   (  ($activeBorder ($vbox ($list ($viewEval @x) (@divideEditor <- @node @x @y) ($viewEval @y)) @divBoxStyle))  ) )
								( (mod (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) (@operatorEditor <- @node @x @y "#'%") ($viewEval @y))))  ) )
								( (pow (: @x ^) (: @y ^))   (  ($activeBorder ($scriptRSuper ($viewEval @x) ($hbox ($list (@operatorEditor <- @node @x @y "#'**") ($viewEval @y))) ))  )  )
								( (loadLocal (: @x !))   (  ($interact ($activeBorder ($entry @x @x @tokeniser)) (@loadlLocalInteractor <- @node) (@exprInteractor <- @node))  )  )
								( (nilExpr)   (  ($activeBorder ($label "#'<expr>" @undefinedStyle))  )  )
							)
						)
					)
				)
			)
		)
	)
)
