(
	($importModuleContents Languages.metalanguage ((languageFactory @mlLangFac))
		($where ((@ml (@mlLangFac createLanguageInstance)))
			(@ml content
				(
					(@ml compilerDefinition asciiCompiler simpleLanguage python25_ascii
						($lambda (@node)
							($match @node
								($# addition)
								( (add (: @x ^) (: @y ^))   (  (((("#'(" + ($compileEval @x)) + "#' + ") + ($compileEval @y)) + "#')")  ) )
								( (sub (: @x ^) (: @y ^))   (  (((("#'(" + ($compileEval @x)) + "#' - ") + ($compileEval @y)) + "#')")  ) )
								( (mul (: @x ^) (: @y ^))   (  (((("#'(" + ($compileEval @x)) + "#' * ") + ($compileEval @y)) + "#')")  ) )
								( (div (: @x ^) (: @y ^))   (  (((("#'(" + ($compileEval @x)) + "#' / ") + ($compileEval @y)) + "#')")  ) )
								( (pow (: @x ^) (: @y ^))   (  (((("#'(" + ($compileEval @x)) + "#' ** ") + ($compileEval @y)) + "#')")  ) )
								( (loadLocal (: @x !))   ((@x)) )
							)
						)
					)
					
					(@ml displayDefinition simpleLanguageDisplay simpleLanguage
						($lambda (@node)
							($match @node
								( (add (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label "#'+") ($viewEval @y))))  ) )
								( (sub (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label "#'-") ($viewEval @y))))  ) )
								( (mul (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label "#'*") ($viewEval @y))))  ) )
								( (div (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label "#'/") ($viewEval @y))))  ) )
								( (pow (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label "#'**") ($viewEval @y))))  ) )
								( (loadLocal (: @x !))   (  ($activeBorder ($entry @x))  ) )
							)
						)
					)
				)
			)
		)
	)
)
