(
	(@gsym withInternalMetaLanguage @mlLang @ml
		(@mlLang content
			(
				(@ml displayDefinition metaLanguageDisplay metaLanguage
					($where
						(
							(@viewDefinitionNode
								($lambda (@node)
									($match @node
										( (! compilerDefinition (: @name !) (: @sourceFormat !) (: @targetFormat !) (: @specification ^))   
											(  ($activeBorder ($hbox ($list ($label "Compiler definition") ($label @name) ($label @sourceFormat) ($label "To:") ($label @targetFormat)))) )  )
										( (! displayDefinition (: @name !) (: @format !) (: @specification ^))   
											(  ($activeBorder ($hbox ($list ($label "View definition") ($label @name) ($label "For:") ($label @format)))) )  )
										( (sub (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label '-') ($viewEval @y))))  ) )
										( (mul (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label '*') ($viewEval @y))))  ) )
										( (div (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label '/') ($viewEval @y))))  ) )
										( (pow (: @x ^) (: @y ^))   (  ($activeBorder ($hbox ($list ($viewEval @x) ($label '**') ($viewEval @y))))  ) )
										( (loadLocal (: @x !))   (  ($activeBorder ($entry @x))  ) )
									)
								)
							)
							
							(@viewLanguageNode
								($lambda (@node)
									($activeBorder ($vbox ($mapViewEval @node @viewDefinitionNode)))
								)
							)
						)
						@viewLanguageNode
					)
				)
			)
		)
	)
)
